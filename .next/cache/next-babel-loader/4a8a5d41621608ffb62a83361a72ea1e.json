{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\n\nconst reducer = (state = {\n  foo: ''\n}, action) => {\n  switch (action.type) {\n    case 'FOO':\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  store\n}) => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Component, pageProps)));\n};\n\nMyApp.getInitialProps = async ({\n  Component,\n  ctx\n}) => {\n  ctx.store.dispatch({\n    type: 'FOO',\n    payload: 'foo'\n  });\n  const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  return {\n    pageProps\n  };\n};\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/pages/_app.js"],"names":["React","createStore","Provider","withRedux","reducer","state","foo","action","type","payload","makeStore","initialState","options","MyApp","Component","pageProps","store","getInitialProps","ctx","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAT,EAAsBC,MAAtB,KAAiC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,+BAAYH,KAAZ;AAAmBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA/B;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH,CAPD;;AASA,MAAMK,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AACzC,SAAOX,WAAW,CAACG,OAAD,EAAUO,YAAV,CAAlB;AACH,CAFD;;AAIA,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAqC;AAC/C,SACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,KACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CADJ,CADJ;AAOH,CARD;;AAUAF,KAAK,CAACI,eAAN,GAAwB,OAAO;AAACH,EAAAA,SAAD;AAAYI,EAAAA;AAAZ,CAAP,KAA4B;AAChDA,EAAAA,GAAG,CAACF,KAAJ,CAAUG,QAAV,CAAmB;AAAEX,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAnB;AACA,QAAMM,SAAS,GAAGD,SAAS,CAACG,eAAV,GAA4B,MAAMH,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF;AACA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACH,CAJD;;AAMA,eAAeZ,SAAS,CAACO,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport withRedux from \"next-redux-wrapper\";\r\n\r\nconst reducer = (state = { foo: '' }, action) => {\r\n    switch (action.type) {\r\n        case 'FOO':\r\n            return { ...state, foo: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst makeStore = (initialState, options) => {\r\n    return createStore(reducer, initialState);\r\n};\r\n\r\nconst MyApp = ({ Component, pageProps, store }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Provider store={store}>\r\n                <Component {...pageProps} />\r\n            </Provider>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nMyApp.getInitialProps = async ({Component, ctx}) => {\r\n    ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\r\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n    return { pageProps };\r\n}\r\n\r\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}