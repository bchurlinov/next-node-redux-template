{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { AUTHENTICATE, DEAUTHENTICATE } from \"./types\";\n\nconst authReducer = (state = {\n  token: null\n}, action) => {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return _objectSpread({}, state, {\n        token: action.payload\n      });\n\n    case DEAUTHENTICATE:\n      return {\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/redux/authReducer.js"],"names":["AUTHENTICATE","DEAUTHENTICATE","authReducer","state","token","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,YAAR,EAAsBC,cAAtB,QAA2C,SAA3C;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAAT,EAAwBC,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAL;AACI,+BACOG,KADP;AAEIC,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFlB;;AAIJ,SAAKN,cAAL;AACI,aAAO;AAACG,QAAAA,KAAK,EAAE;AAAR,OAAP;;AACJ;AACI,aAAOD,KAAP;AATR;AAWH,CAZD;;AAcA,eAAeD,WAAf","sourcesContent":["import {AUTHENTICATE, DEAUTHENTICATE} from \"./types\";\r\n\r\nconst authReducer = (state = {token: null}, action) => {\r\n    switch (action.type) {\r\n        case AUTHENTICATE :\r\n            return {\r\n                ...state,\r\n                token: action.payload\r\n            }\r\n        case DEAUTHENTICATE:\r\n            return {token: null};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}