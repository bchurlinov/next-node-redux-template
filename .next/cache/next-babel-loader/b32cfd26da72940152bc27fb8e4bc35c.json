{"ast":null,"code":"import { AUTHENTICATE, DEAUTHENTICATE, GET_PROFILE } from \"./types\";\nimport Router from \"next/router\";\nimport cookie from \"js-cookie\";\nimport axios from \"axios\";\nexport const authenticate = user => {\n  return async dispatch => {\n    const response = await axios.post(\"http://localhost:3000/api/auth/login\", user);\n    dispatch(getProfile());\n    setCookie(\"token\", response.data.token);\n    dispatch({\n      type: AUTHENTICATE,\n      payload: response\n    });\n    setTimeout(() => {\n      Router.push(\"/\");\n    }, 0);\n  };\n};\nexport const getProfile = id => {\n  return async dispatch => {\n    const {\n      data\n    } = await axios.get(\"http://localhost:3000/api/auth/profile/5ea42b795e51a2439429da54\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: data.user\n    });\n  };\n};\nexport const updateProfile = () => {\n  return async dispatch => {\n    const update = await axios.patch(\"http://localhost:3000/api/auth/profile/5ea42b795e51a2439429da54\");\n    dispatch(getProfile());\n  };\n}; // gets the token from the cookie and saves it in the store\n\nexport const reauthenticate = token => {\n  return dispatch => {\n    dispatch({\n      type: AUTHENTICATE,\n      payload: token\n    });\n  };\n}; // removing the token\n\nexport const deauthenticate = () => {\n  return dispatch => {\n    removeCookie('token');\n    Router.push('/');\n    dispatch({\n      type: DEAUTHENTICATE\n    });\n  };\n}; // Helper Functions\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key);\n  }\n};\nexport const getCookie = (key, req) => {\n  return false ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nconst getCookieFromBrowser = key => {\n  return cookie.get(key);\n};\n\nconst getCookieFromServer = (key, req) => {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};\n\nexport const checkServerSideCookie = ctx => {\n  return async dispatch => {\n    if (ctx.isServer) {\n      if (ctx.req.headers.cookie) {\n        console.log(1);\n        const token = getCookie('token', ctx.req);\n        ctx.store.dispatch(reauthenticate(token));\n      }\n    } else {\n      const token = ctx.store.getState().authentication.token;\n      console.log(2);\n\n      if (token && ctx.pathname === \"/signin\") {\n        Router.push(\"/\");\n      }\n    }\n  };\n};","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/redux/authActions.js"],"names":["AUTHENTICATE","DEAUTHENTICATE","GET_PROFILE","Router","cookie","axios","authenticate","user","dispatch","response","post","getProfile","setCookie","data","token","type","payload","setTimeout","push","id","get","updateProfile","update","patch","reauthenticate","deauthenticate","removeCookie","key","value","set","expires","remove","getCookie","req","getCookieFromBrowser","getCookieFromServer","headers","undefined","rawCookie","split","find","c","trim","startsWith","checkServerSideCookie","ctx","isServer","console","log","store","getState","authentication","pathname"],"mappings":"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","sourcesContent":["import {AUTHENTICATE, DEAUTHENTICATE, GET_PROFILE} from \"./types\";\r\nimport Router from \"next/router\";\r\nimport cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\nexport const authenticate = user => {\r\n    return async (dispatch) => {\r\n\r\n        const response = await axios.post(\"http://localhost:3000/api/auth/login\", user);\r\n\r\n        dispatch(getProfile());\r\n\r\n        setCookie(\"token\", response.data.token);\r\n\r\n        dispatch({\r\n            type: AUTHENTICATE,\r\n            payload: response\r\n        });\r\n\r\n        setTimeout(() => {\r\n            Router.push(\"/\");\r\n        }, 0)\r\n    }\r\n}\r\n\r\nexport const getProfile = id => {\r\n    return async(dispatch) => {\r\n        const {data} = await axios.get(\"http://localhost:3000/api/auth/profile/5ea42b795e51a2439429da54\");\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: data.user\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProfile = () => {\r\n    return async(dispatch) => {\r\n        const update = await axios.patch(\"http://localhost:3000/api/auth/profile/5ea42b795e51a2439429da54\");\r\n        dispatch(getProfile());\r\n    }\r\n}\r\n\r\n// gets the token from the cookie and saves it in the store\r\nexport const reauthenticate = token => {\r\n    return dispatch => {\r\n        dispatch({ type: AUTHENTICATE, payload: token });\r\n    };\r\n};\r\n\r\n// removing the token\r\nexport const deauthenticate = () => {\r\n    return dispatch => {\r\n        removeCookie('token');\r\n        Router.push('/');\r\n        dispatch({ type: DEAUTHENTICATE });\r\n    };\r\n};\r\n\r\n// Helper Functions\r\n\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1,\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key);\r\n    }\r\n};\r\n\r\nexport const getCookie = (key, req) => {\r\n    return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\r\n};\r\n\r\nconst getCookieFromBrowser = key => {\r\n    return cookie.get(key);\r\n};\r\n\r\nconst getCookieFromServer = (key, req) => {\r\n    if (!req.headers.cookie) {\r\n        return undefined;\r\n    }\r\n    const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\r\n    if (!rawCookie) {\r\n        return undefined;\r\n    }\r\n    return rawCookie.split('=')[1];\r\n};\r\n\r\nexport const checkServerSideCookie = ctx => {\r\n    return async(dispatch) => {\r\n        if (ctx.isServer) {\r\n            if (ctx.req.headers.cookie) {\r\n                console.log(1);\r\n                const token = getCookie('token', ctx.req);\r\n                ctx.store.dispatch(reauthenticate(token));\r\n            }\r\n        } else {\r\n            const token = ctx.store.getState().authentication.token;\r\n            console.log(2);\r\n\r\n            if (token && ctx.pathname === \"/signin\") {\r\n                Router.push(\"/\")\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}