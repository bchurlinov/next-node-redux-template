{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AUTHENTICATE } from \"./types\";\nimport Router from \"next/router\";\nimport cookie from \"js-cookie\";\nexport var authenticate = function authenticate(user) {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            response = \"143lkjnd0a9sjndkalnsdjl1nk2n1029jneklnasdmnaklsndiop12\";\n            dispatch({\n              type: AUTHENTICATE,\n              payload: response\n            });\n            setTimeout(function () {\n              Router.push(\"/\");\n            }, 1000);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var setCookie = function setCookie(key, value) {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport var getCookie = function getCookie(key, req) {\n  return true ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nvar getCookieFromBrowser = function getCookieFromBrowser(key) {\n  return cookie.get(key);\n};\n\nvar getCookieFromServer = function getCookieFromServer(key, req) {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  var rawCookie = req.headers.cookie.split(';').find(function (c) {\n    return c.trim().startsWith(\"\".concat(key, \"=\"));\n  });\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/redux/authActions.js"],"names":["AUTHENTICATE","Router","cookie","authenticate","user","dispatch","response","type","payload","setTimeout","push","setCookie","key","value","set","expires","path","removeCookie","remove","getCookie","req","getCookieFromBrowser","getCookieFromServer","get","headers","undefined","rawCookie","split","find","c","trim","startsWith"],"mappings":";AAAA,SAAQA,YAAR,QAA2B,SAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAChC,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACGC,YAAAA,QADH,GACc,wDADd;AAGHD,YAAAA,QAAQ,CAAC;AACLE,cAAAA,IAAI,EAAEP,YADD;AAELQ,cAAAA,OAAO,EAAEF;AAFJ,aAAD,CAAR;AAKAG,YAAAA,UAAU,CAAC,YAAM;AACbR,cAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACH,aAFS,EAEP,IAFO,CAAV;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAYH,CAbM;AAeP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AACrC,YAAqB;AACjBX,IAAAA,MAAM,CAACY,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACnBE,MAAAA,OAAO,EAAE,CADU;AAEnBC,MAAAA,IAAI,EAAE;AAFa,KAAvB;AAIH;AACJ,CAPM;AASP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAL,GAAG,EAAI;AAC/B,YAAqB;AACjBV,IAAAA,MAAM,CAACgB,MAAP,CAAcN,GAAd,EAAmB;AACfG,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CANM;AAQP,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACP,GAAD,EAAMQ,GAAN,EAAc;AACnC,SAAO,OAAkBC,oBAAoB,CAACT,GAAD,CAAtC,GAA8CU,mBAAmB,CAACV,GAAD,EAAMQ,GAAN,CAAxE;AACH,CAFM;;AAIP,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAT,GAAG,EAAI;AAChC,SAAOV,MAAM,CAACqB,GAAP,CAAWX,GAAX,CAAP;AACH,CAFD;;AAIA,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACV,GAAD,EAAMQ,GAAN,EAAc;AACtC,MAAI,CAACA,GAAG,CAACI,OAAJ,CAAYtB,MAAjB,EAAyB;AACrB,WAAOuB,SAAP;AACH;;AACD,MAAMC,SAAS,GAAGN,GAAG,CAACI,OAAJ,CAAYtB,MAAZ,CAAmByB,KAAnB,CAAyB,GAAzB,EAA8BC,IAA9B,CAAmC,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,GAASC,UAAT,WAAuBnB,GAAvB,OAAJ;AAAA,GAApC,CAAlB;;AACA,MAAI,CAACc,SAAL,EAAgB;AACZ,WAAOD,SAAP;AACH;;AACD,SAAOC,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAP;AACH,CATD","sourcesContent":["import {AUTHENTICATE} from \"./types\";\r\nimport Router from \"next/router\";\r\nimport cookie from \"js-cookie\";\r\n\r\nexport const authenticate = user => {\r\n    return async (dispatch) => {\r\n        const response = \"143lkjnd0a9sjndkalnsdjl1nk2n1029jneklnasdmnaklsndiop12\"\r\n\r\n        dispatch({\r\n            type: AUTHENTICATE,\r\n            payload: response\r\n        });\r\n\r\n        setTimeout(() => {\r\n            Router.push(\"/\");\r\n        }, 1000)\r\n    }\r\n}\r\n\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1,\r\n            path: '/'\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const getCookie = (key, req) => {\r\n    return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\r\n};\r\n\r\nconst getCookieFromBrowser = key => {\r\n    return cookie.get(key);\r\n};\r\n\r\nconst getCookieFromServer = (key, req) => {\r\n    if (!req.headers.cookie) {\r\n        return undefined;\r\n    }\r\n    const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\r\n    if (!rawCookie) {\r\n        return undefined;\r\n    }\r\n    return rawCookie.split('=')[1];\r\n};"]},"metadata":{},"sourceType":"module"}