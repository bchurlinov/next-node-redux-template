{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { AUTHENTICATE, DEAUTHENTICATE } from \"./types\";\nimport Router from \"next/router\";\nimport cookie from \"js-cookie\";\nimport axios from \"axios\";\nexport var authenticate = function authenticate(user) {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.post(\"http://localhost:3000/api/auth/login\", user));\n\n          case 2:\n            response = _context.sent;\n            setCookie(\"token\", response.data.token);\n            dispatch({\n              type: AUTHENTICATE,\n              payload: response\n            });\n            setTimeout(function () {\n              Router.push(\"/\");\n            }, 1000);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n}; // gets the token from the cookie and saves it in the store\n\nexport var reauthenticate = function reauthenticate(token) {\n  return function (dispatch) {\n    dispatch({\n      type: AUTHENTICATE,\n      payload: token\n    });\n  };\n}; // removing the token\n\nexport var deauthenticate = function deauthenticate() {\n  return function (dispatch) {\n    removeCookie('token');\n    Router.push('/');\n    dispatch({\n      type: DEAUTHENTICATE\n    });\n  };\n}; // Helper Functions\n\nexport var setCookie = function setCookie(key, value) {\n  console.log(key);\n  console.log(value);\n\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1,\n      path: '/'\n    });\n  }\n};\nexport var removeCookie = function removeCookie(key) {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport var getCookie = function getCookie(key, req) {\n  return true ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\n};\n\nvar getCookieFromBrowser = function getCookieFromBrowser(key) {\n  return cookie.get(key);\n};\n\nvar getCookieFromServer = function getCookieFromServer(key, req) {\n  if (!req.headers.cookie) {\n    return undefined;\n  }\n\n  var rawCookie = req.headers.cookie.split(';').find(function (c) {\n    return c.trim().startsWith(\"\".concat(key, \"=\"));\n  });\n\n  if (!rawCookie) {\n    return undefined;\n  }\n\n  return rawCookie.split('=')[1];\n};","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/redux/authActions.js"],"names":["AUTHENTICATE","DEAUTHENTICATE","Router","cookie","axios","authenticate","user","dispatch","post","response","setCookie","data","token","type","payload","setTimeout","push","reauthenticate","deauthenticate","removeCookie","key","value","console","log","set","expires","path","remove","getCookie","req","getCookieFromBrowser","getCookieFromServer","get","headers","undefined","rawCookie","split","find","c","trim","startsWith"],"mappings":"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","sourcesContent":["import {AUTHENTICATE, DEAUTHENTICATE} from \"./types\";\r\nimport Router from \"next/router\";\r\nimport cookie from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\nexport const authenticate = user => {\r\n    return async (dispatch) => {\r\n\r\n        const response = await axios.post(\"http://localhost:3000/api/auth/login\", user);\r\n\r\n        setCookie(\"token\", response.data.token);\r\n\r\n        dispatch({\r\n            type: AUTHENTICATE,\r\n            payload: response\r\n        });\r\n\r\n        setTimeout(() => {\r\n            Router.push(\"/\");\r\n        }, 1000)\r\n    }\r\n}\r\n\r\n// gets the token from the cookie and saves it in the store\r\nexport const reauthenticate = token => {\r\n    return dispatch => {\r\n        dispatch({ type: AUTHENTICATE, payload: token });\r\n    };\r\n};\r\n\r\n// removing the token\r\nexport const deauthenticate = () => {\r\n    return dispatch => {\r\n        removeCookie('token');\r\n        Router.push('/');\r\n        dispatch({ type: DEAUTHENTICATE });\r\n    };\r\n};\r\n\r\n// Helper Functions\r\n\r\nexport const setCookie = (key, value) => {\r\n    console.log(key);\r\n    console.log(value);\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1,\r\n            path: '/'\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const getCookie = (key, req) => {\r\n    return process.browser ? getCookieFromBrowser(key) : getCookieFromServer(key, req);\r\n};\r\n\r\nconst getCookieFromBrowser = key => {\r\n    return cookie.get(key);\r\n};\r\n\r\nconst getCookieFromServer = (key, req) => {\r\n    if (!req.headers.cookie) {\r\n        return undefined;\r\n    }\r\n    const rawCookie = req.headers.cookie.split(';').find(c => c.trim().startsWith(`${key}=`));\r\n    if (!rawCookie) {\r\n        return undefined;\r\n    }\r\n    return rawCookie.split('=')[1];\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}