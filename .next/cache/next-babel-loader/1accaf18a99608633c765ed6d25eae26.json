{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/Layout\";\nimport { reauthenticate, getCookie, getProfile } from \"../redux/authActions\";\nimport Router from \"next/router\";\n\nconst Profile = ({\n  reauthenticate,\n  getCookie,\n  user,\n  getProfile\n}) => {\n  return __jsx(Layout, {\n    title: \"Profile Page\"\n  }, user && __jsx(\"div\", null, __jsx(\"h2\", null, \"Who am i\"), JSON.stringify(user)) || 'Please sign in');\n};\n\nProfile.getInitialProps = async ctx => {\n  console.log(ctx);\n\n  if (ctx.isServer) {\n    if (ctx.req.headers.cookie) {\n      const token = getCookie('token', ctx.req);\n      ctx.store.dispatch(reauthenticate(token));\n    } else {\n      const token = ctx.store.getState().authentication.token;\n\n      if (token && (ctx.pathname === '/signin' || ctx.pathname === '/signup')) {\n        setTimeout(function () {\n          Router.push('/');\n        }, 0);\n      }\n    }\n\n    const token = ctx.store.getState().authentication.token;\n\n    if (token) {\n      return {\n        user: 'Ryan'\n      };\n    }\n  }\n};\n\nexport default connect(state => state, {\n  reauthenticate,\n  getProfile\n})(Profile);","map":{"version":3,"sources":["E:/pratice-projects/next-js-redux/pages/profile.js"],"names":["axios","connect","Layout","reauthenticate","getCookie","getProfile","Router","Profile","user","JSON","stringify","getInitialProps","ctx","console","log","isServer","req","headers","cookie","token","store","dispatch","getState","authentication","pathname","setTimeout","push","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,EAAyBC,SAAzB,EAAoCC,UAApC,QAAsD,sBAAtD;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEJ,EAAAA,cAAF;AAAkBC,EAAAA,SAAlB;AAA6BI,EAAAA,IAA7B;AAAmCH,EAAAA;AAAnC,CAAD,KAAqD;AACjE,SACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,KACMG,IAAI,IACF,mBACI,6BADJ,EAEKC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAFL,CADH,IAMG,gBAPR,CADJ;AAWH,CAZD;;AAcAD,OAAO,CAACI,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,MAAIA,GAAG,CAACG,QAAR,EAAkB;AACd,QAAIH,GAAG,CAACI,GAAJ,CAAQC,OAAR,CAAgBC,MAApB,EAA4B;AACxB,YAAMC,KAAK,GAAGf,SAAS,CAAC,OAAD,EAAUQ,GAAG,CAACI,GAAd,CAAvB;AACAJ,MAAAA,GAAG,CAACQ,KAAJ,CAAUC,QAAV,CAAmBlB,cAAc,CAACgB,KAAD,CAAjC;AACH,KAHD,MAGO;AACH,YAAMA,KAAK,GAAGP,GAAG,CAACQ,KAAJ,CAAUE,QAAV,GAAqBC,cAArB,CAAoCJ,KAAlD;;AAEA,UAAIA,KAAK,KAAKP,GAAG,CAACY,QAAJ,KAAiB,SAAjB,IAA8BZ,GAAG,CAACY,QAAJ,KAAiB,SAApD,CAAT,EAAyE;AACrEC,QAAAA,UAAU,CAAC,YAAY;AACnBnB,UAAAA,MAAM,CAACoB,IAAP,CAAY,GAAZ;AACH,SAFS,EAEP,CAFO,CAAV;AAGH;AACJ;;AAED,UAAMP,KAAK,GAAGP,GAAG,CAACQ,KAAJ,CAAUE,QAAV,GAAqBC,cAArB,CAAoCJ,KAAlD;;AAEA,QAAIA,KAAJ,EAAW;AACP,aAAO;AACHX,QAAAA,IAAI,EAAE;AADH,OAAP;AAGH;AACJ;AAEJ,CA1BD;;AA4BA,eAAeP,OAAO,CAAC0B,KAAK,IAAIA,KAAV,EAAiB;AAAExB,EAAAA,cAAF;AAAkBE,EAAAA;AAAlB,CAAjB,CAAP,CAAwDE,OAAxD,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Layout from \"../components/Layout\";\r\nimport { reauthenticate, getCookie, getProfile } from \"../redux/authActions\";\r\nimport Router from \"next/router\";\r\n\r\nconst Profile = ({ reauthenticate, getCookie, user, getProfile }) => {\r\n    return (\r\n        <Layout title=\"Profile Page\">\r\n            {(user && (\r\n                <div>\r\n                    <h2>Who am i</h2>\r\n                    {JSON.stringify(user)}\r\n                </div>\r\n            )) ||\r\n                'Please sign in'}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nProfile.getInitialProps = async ctx => {\r\n    console.log(ctx);\r\n\r\n    if (ctx.isServer) {\r\n        if (ctx.req.headers.cookie) {\r\n            const token = getCookie('token', ctx.req);\r\n            ctx.store.dispatch(reauthenticate(token));\r\n        } else {\r\n            const token = ctx.store.getState().authentication.token;\r\n\r\n            if (token && (ctx.pathname === '/signin' || ctx.pathname === '/signup')) {\r\n                setTimeout(function () {\r\n                    Router.push('/');\r\n                }, 0);\r\n            }\r\n        }\r\n\r\n        const token = ctx.store.getState().authentication.token;\r\n\r\n        if (token) {\r\n            return {\r\n                user: 'Ryan'\r\n            };\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(state => state, { reauthenticate, getProfile })(Profile);"]},"metadata":{},"sourceType":"module"}